//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3521
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Maverick.Web.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Maverick.Web.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The action invoker for this controller been changed.  Maverick only supports the default action invoker for controllers inheriting from System.Web.Mvc.Controller.  Implement IModuleController or implement a custom Controller Adaptor for use in the AdaptController override in your Module Application in order to have more control over this process..
        /// </summary>
        internal static string Error_ActionInvokerChanged {
            get {
                return ResourceManager.GetString("Error_ActionInvokerChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not construct controller, or it was not of a supported type.  Only controllers which implement Maverick.Web.ModuleFramework.IModuleController are supported.  Controllers implementing System.Web.Mvc.IController alone are not supported.  Controllers inheriting from System.Web.Mvc.Controller AND using the default Action Invoker can be adapted by Maverick and ARE supported..
        /// </summary>
        internal static string Error_CouldNotConstructController {
            get {
                return ResourceManager.GetString("Error_CouldNotConstructController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Data Context Builder could not construct a Data Context.
        /// </summary>
        internal static string Error_DataContextBuilderReturnedNull {
            get {
                return ResourceManager.GetString("Error_DataContextBuilderReturnedNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ModuleRouteRewriter is only designed for URL generation from route data.
        /// </summary>
        internal static string Error_ModuleRouteRewriterOnlyForOutboundRouting {
            get {
                return ResourceManager.GetString("Error_ModuleRouteRewriterOnlyForOutboundRouting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An Azure Access Control Service solution name must be specified as the value of the &quot;Maverick.Web.Identity.AcsSolutionName&quot; setting in Configuration/AppSettings.config.
        /// </summary>
        internal static string Error_NoACSSolution {
            get {
                return ResourceManager.GetString("Error_NoACSSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Data Context Builder was not provided to the HttpContext-based Data Context Manager.
        /// </summary>
        internal static string Error_NoDataContextBuilder {
            get {
                return ResourceManager.GetString("Error_NoDataContextBuilder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An HttpContext source function was not specified to the HttpContext-based Data Context Manager.
        /// </summary>
        internal static string Error_NoHttpContextSource {
            get {
                return ResourceManager.GetString("Error_NoHttpContextSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load database provider: {0}.
        /// </summary>
        internal static string Error_UnableToLoadDatabaseProvider {
            get {
                return ResourceManager.GetString("Error_UnableToLoadDatabaseProvider", resourceCulture);
            }
        }
    }
}
