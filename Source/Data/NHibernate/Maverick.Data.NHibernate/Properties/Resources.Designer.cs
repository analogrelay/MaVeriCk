//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3521
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Maverick.Data.NHibernate.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Maverick.Data.NHibernate.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration source returned a null reference (Nothing in VB.Net) instead of a reference to an NHibernate.Cfg.ConfigurationSource.  Ensure that the configuration source returns a non-null value..
        /// </summary>
        internal static string Error_ConfigurationSourceReturnedNull {
            get {
                return ResourceManager.GetString("Error_ConfigurationSourceReturnedNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expression passed to IEntityQuery&lt;T&gt;.Include() must be a member access expression.
        /// </summary>
        internal static string Error_ExpressionWasNotMemberAccess {
            get {
                return ResourceManager.GetString("Error_ExpressionWasNotMemberAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No configuration source.  Either a String, containing the path to the NHibernate configuration file, must be exported to the CompositionContainer with the contract name &apos;{0}&apos;. Or, a Func&lt;NHibernate.Cfg.Configuration&gt;, capable of constructing an NHibernate configuration object, must be exported to the CompositionContainer with the contract name &apos;{1}&apos;.  Alternatively, one of the ConfigurationFilePath or ConfigurationSource properties on Maverick.Data.NHibernate.DataContextFactory must be set..
        /// </summary>
        internal static string Error_NoConfigurationSource {
            get {
                return ResourceManager.GetString("Error_NoConfigurationSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A database configuration could not be found.  Ensure that either: a) A FluentNHibernate.Cfg.Db.IPersistenceConfigurer has been exported to the CompositionContainer or b) The DatabaseConfiguration property on the Maverick.Data.NHibernate.NHibernateDataContextFactory has been set.
        /// </summary>
        internal static string Error_NoDatabaseConfigurationSet {
            get {
                return ResourceManager.GetString("Error_NoDatabaseConfigurationSet", resourceCulture);
            }
        }
    }
}
